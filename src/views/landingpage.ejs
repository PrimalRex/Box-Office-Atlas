<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Home - Box Office Atlas</title>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
  <link href="/css/mapbox-gl.css" rel="stylesheet">
  <link href="/css/mapbox-extra.css" rel="stylesheet">
  <link href="/css/main.css" rel="stylesheet">
  <link href="/css/titles.css" rel="stylesheet">
  <link href="/css/loaders.css" rel="stylesheet">
  <script src="/js/mapbox-gl.js"></script>
  <script src="/js/landingpage.js" type="text/javascript"></script>
  <script type="module" src="/js/searchtitles.js"></script>
</head>
<body>
  <!-- Loading Screen -->
  <div id="loading-overlay">
    <div id="loading-message">
        <%= loadingMessage %>
    </div>
    <div class="loading">
		<div class="loading-dot"></div>
		<div class="loading-dot"></div>
        <div class="loading-dot"></div>
        <div class="loading-dot"></div>
    </div>
    <div class="quote-box">
        <p>"<%= quote.quote %>"</p>
        <p><strong><%= quote.quoteAuthor %></strong></p>
    </div>
  </div>

  <!-- Search Results Overlay -->
  <div id="generic-overlay" class="fade-out">
    <h1>FOUND (0) RESULTS</h1>
    <p><span id="search-info"> :[  TRY A SHORTER SPELLING OR DIFFERENT NAME</span></p>
    <div id="titles-container">
    </div>
    <p></p>
    <div id="search-button">
        <th id="close-search-menu">CLOSE SEARCH RESULTS</th>
    </div>
  </div> 
  
  <!-- Top Nav Bar -->
  <div id="top-nav-bar">
    <div id="top-nav-bar-content">
        <div id="search-bar">
            <div id="search-icon">
                <img src="/images/SearchIcon.png">
            </div>
            <input type="text" id="search-input" placeholder="Search for Titles">
        </div>
        <div id="user-profile">
            <a href="/account">
                <img src="/images/UserProfileIcon.png" alt="User Profile">
            </a>
        </div>
        <div id="boa-logo">
            <a href="/about">
                <img src="/images/BOAIconTransparent.png" alt="BOA Logo">
            </a>
        </div>
    </div>
  </div>

  <!-- Title/Film Panel -->
  <div id="left-panel">
    <div id="movie-details">
        <h1 id="movie-title">FIND A TITLE</h1>
        <p><span id="movie-subbox">NO INFORMATION</span></p>
        <img id="movie-poster" src="/images/BOAPoster.jpg" alt="Promo Poster">
        <p id="movie-summary">Need to know more about a film you're looking at? You've found the
            right panel! <BR><BR>Select any film / title from the top search bar.</BR>
            <BR>Account page at the top right to view your saved films!</BR>
        </p>
        <table id="movie-info-table">
            <tr>
                <td><strong>DISTR.</strong></td>
                <td><strong>&nbsp;::&nbsp;</strong></td>
                <td id="movie-distributor"> HARRIS BARRA </td>
            </tr>
            <tr>
                <td><strong>GENRE(S)</strong></td>
                <td><strong>&nbsp;::&nbsp;</strong></td>
                <td id="movie-genre"> ACTION, ACTION, MAYBE ACTION </td>
            </tr>
        </table>
        
        <!-- Grosses Table -->
        <table id="grosses-table">
            <tr>
                <th>DOMESTIC GROSS</th>
                <th>INTERNATIONAL GROSS</th>
            </tr>
            <tr>
                <td><strong> $ ? </strong></td>
                <td><strong> $ ? </strong></td>
            </tr>
            <tr>
                <th colspan="2">WORLDWIDE TOTAL</th>
            </tr>
            <tr>
                <td colspan="2"><strong> $ ? </td>
            </tr>
        </table>

        <table id="save-movie">
            <a href = "/toggle-save-movie">
                <th id="save-movie-state">...</th>
            </a>
        </table>
    </div>
  </div>

  <!-- Map container -->
  <div id="map"></div>

  <script>
    mapboxgl.accessToken = '<%= boaData %>';
    // Initialize map
    const map = new mapboxgl.Map({
      container: 'map',
      style: '/BOAStyle.json',
      center:[90, -13], // starting position [lng, lat] (awkward why this is flipped)
      zoom: 1.5,
      minZoom: 1.5,
      maxZoom: 3.9,
    });

    // Array to store all the markers on the map
    var markers = [];

    // Variable to store whether the mouse is over the top nav bar
    var isMouseOverTopNavBar = false;

    // Once all the elements on the page have loaded we will ask the server to provide us with some data to use
    document.addEventListener("DOMContentLoaded", async function() {
        try {
            // Throw up a different message
            loadingMessage = document.getElementById('loading-message');
            loadingMessage.innerText = '<%= loadingMessages[Math.floor(Math.random() * loadingMessages.length)] %>';

            // Grab the loading overlay and make it visible
            const overlay = document.getElementById('loading-overlay');
            overlay.classList.remove('fade-out');
            overlay.style.display = 'flex';

            // A route to ensure any preliminary data is loaded before the user can interact with the app
            const response = await fetch('/fetch-landing-data');
            if (!response.ok) {
                // Usually occurs when theres an error in some sort of setup or an unlikely ratelimit from IMDb
                throw new Error(`Not an OK response from kick-off.... error! status: ${response.status}`);
            }
            
            const data = await response.json();
            
            if (data.success) {
                // Add event listeners to show/hide the top nav bar on hover
                document.getElementById("top-nav-bar").addEventListener("mouseenter", () => {
                    document.getElementById("top-nav-bar").classList.add("visible");
                    isMouseOverTopNavBar = true;
                });
                document.getElementById("top-nav-bar").addEventListener("mouseleave", () => {
                    isMouseOverTopNavBar = false;
                });

                if('<%= ttID %>' != 'home'){
                    // If we have a ttID in the URL, we will use that to search for a movie
                    const response = await fetch('/submit-ttID', {
                        method: 'POST',
                        body: JSON.stringify({ ttID: '<%= ttID %>' }),
                        headers: new Headers({ "Content-Type": "application/json" })
                    });

                    const data = await response.json();

                    if(data.success){
                        // Clears existing globe info and update the landing page with the new movie data
                        clearMarkersAndLayers(markers, map);
                        updateLandingPageWithMovieData(data);
                        // Updates the 'Save Movie' button to reflect the current state of the movie
                        getTitleSavedState('<%= ttID %>');
                        
                        // Commence fade-out after 200 ms (DOM needs some time to make the changes)
                        setTimeout(() => {
                            var saveBtn = document.getElementById("save-movie");
                            saveBtn.classList.add('visible');
                            var grossesTable = document.getElementById("grosses-table");
                            grossesTable.classList.add('visible');
                        }, 200);
                    } else {
                        console.error('Error fetching API data:', data);
                    }
                }
                // If we are entering the homepage without any ttID we can just unfade as per usual
                // Commence fade-out after 200 ms (DOM needs some time to make the changes)
                const mapContainer = document.getElementById('map');
                mapContainer.classList.add('visible');
                setTimeout(() => {
                    overlay.classList.add('fade-out');
                    updateMarkerOpacity();
                    map.flyTo({
                        center: [-96,36],
                        zoom: 2,
                        speed: .3, 
                        curve: 1
                    });
                    overlay.addEventListener('transitionend', () => {
                        // Only when the animation is finished do we allow the users to interact with the app and any other elements
                        overlay.style.display = 'none';
                        updateMarkerOpacity();

                        // Grab the loading overlay and update the message
                        var loadingMessage = document.getElementById('loading-message');
                        loadingMessage.innerText = "COOLING THE AFTERBURNERS...";

                        // Fade in the map
                        const leftPanelContainer = document.getElementById('left-panel');
                        leftPanelContainer.classList.add('visible');
                        
                        // Postload, we can register the movie to be ready to be saved (prevents saving before the user loads everything)
                        document.getElementById("save-movie").addEventListener("click", async () => {
                            await toggleTitleSavedState('<%= ttID %>');
                        });
                    });
                }, 200);
            }
        } catch (error) {
            console.error('Error fetching API data:', error);
        }
    });

    // Listen for changes in camera position
    map.on('move', () => {
        updateMarkerOpacity();
        if(map.getZoom() >= 2.5 && !isMouseOverTopNavBar){
            document.getElementById('top-nav-bar').classList.remove('visible');
        }
    });

    // Listen for changes in zoom level so we can update the nav bar visibility
    map.on('zoomstart', () => {
        // If we're zooming that means we lost focus on the nav bar so we can safely assume its not hovered
        isMouseOverTopNavBar = false;
    });

    map.on('zoomend', () => {
        // Check zoom and also check if nav bar is currently hovered or not
        if(map.getZoom() >= 2.5 && !isMouseOverTopNavBar){
            document.getElementById('top-nav-bar').classList.remove('visible');
        }
        else if (!isMouseOverTopNavBar){
            document.getElementById('top-nav-bar').classList.add('visible');
        }
    });
    
  </script>
</body>
</html>
